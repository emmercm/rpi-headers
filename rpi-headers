#!/usr/bin/env bash

set -o nounset
set -o errexit

HEAD_PACKAGE=linux-headers-$(uname -r)


# Check if already installed
function check_headers() {
	if [ -e "/lib/modules/$(uname -r)/build/arch/arm" ]; then
		if [ ! -e "/lib/modules/$(uname -r)/build/kernel/time/timeconst.bc" ]; then
			# https://github.com/raspberrypi/linux/issues/1441
			# https://www.niksula.hut.fi/~mhiienka/Rpi/linux-headers-rpi/linux-headers-4.4.11-v7+_4.4.11-v7+-2_armhf.deb
			return 1
		fi
		return 0
	fi
	return 1
}


check_headers && (
	echo "${HEAD_PACKAGE} already installed"
	echo ""
	exit 0
)


# Try APT (likely to fail)
check_headers || (
	echo "Checking apt-cache for ${HEAD_PACKAGE} ..."
	
	echo "   Running apt-get update ..."
	sudo apt-get update > /dev/null || true
	
	# niksula.hut.fi package shows up in "apt-cache search"
	DPKG_LIST=$(dpkg --list "${HEAD_PACKAGE}" 2>&1 | grep "no package" || true)
	if [ "${DPKG_LIST}" == "" ]; then
		echo "   Uninstalling old package ..."
		sudo dpkg --remove --force-remove-reinstreq "${HEAD_PACKAGE}" &> /dev/null
	fi
	
	APT_CACHE=$(apt-cache search "${HEAD_PACKAGE}")
	if [ "${APT_CACHE}" != "" ]; then
		echo "   Found package, installing ..."
		sudo apt-get -y install "${HEAD_PACKAGE}" > /dev/null
	else
		echo "   Did not find package"
	fi
	echo ""
)


# Try niksula.hut.fi/~mhiienka
check_headers || (
	echo "Checking https://www.niksula.hut.fi/~mhiienka for ${HEAD_PACKAGE} ..."
	
	WGET_PACKAGE=$(wget https://www.niksula.hut.fi/~mhiienka/Rpi/linux-headers-rpi/ -qq --tries 3 -O - | sed -n "s/.*href=\"\([^\"\/]\+\).*/\1/p" | sed 's/%2B/+/ig' | grep \.deb | grep "${HEAD_PACKAGE}" || true)
	if [ "${WGET_PACKAGE}" != "" ]; then
		cd /usr/src
		if [ -e "${WGET_PACKAGE}" ]; then
			echo "   Deleting ${WGET_PACKAGE} ..."
			sudo rm -f "${WGET_PACKAGE}" > /dev/null
		fi
		echo "   Downloading ${WGET_PACKAGE} ..."
		sudo wget --quiet --tries 3 "https://www.niksula.hut.fi/~mhiienka/Rpi/linux-headers-rpi/${WGET_PACKAGE}" > /dev/null
		if [ -e "${WGET_PACKAGE}" ]; then
			DPKG_LIST=$(dpkg --list "${HEAD_PACKAGE}" 2>&1 | grep "no package" || true)
			if [ "$DPKG_LIST" == "" ]; then
				echo "   Uninstalling old package ..."
				sudo dpkg --remove --force-remove-reinstreq "${HEAD_PACKAGE}" &> /dev/null
			fi
			if [ -e "${HEAD_PACKAGE}" ]; then
				echo "   Deleting $(pwd)/${HEAD_PACKAGE}/ ..."
				sudo rm -rf "${HEAD_PACKAGE}" > /dev/null
			fi
			echo "   Installing package ..."
			sudo dpkg --install "${WGET_PACKAGE}" > /dev/null || true
			sudo rm -f "${WGET_PACKAGE}" > /dev/null
			
			check_headers && (
				echo "   Installing apt-get missing dependencies ..."
				sudo apt-get -y check > /dev/null
				sudo apt-get -fy install > /dev/null
			) || (
				echo "      Install failed, removing ..."
				sudo dpkg --remove --force-remove-reinstreq "${HEAD_PACKAGE}" &> /dev/null
				sudo rm -rf "/lib/modules/$(uname -r)"
			)
		else
			echo "      Download failed"
		fi
	else
		echo "   Did not find package"
	fi
	echo ""
)


# Build from source (takes up a lot of space on disk)
check_headers || (
	echo "Building ${HEAD_PACKAGE} from http://github.com/raspberrypi/linux ..."
	cd /usr/src
	GIT_BRANCH=rpi-$(uname -r | sed -n "s/\([0-9]\+\.[0-9]\+\).*/\1/p").y
	
	# Generate /proc/config.gz if missing
	if [ ! -e "/proc/config.gz" ]; then
		echo "   Kernel config missing, running modprobe ..."
		# Get depmod files from GitHub if missing
		if [ ! -e "/lib/modules/$(uname -r)/modules.dep.bin" ]; then
			echo "      depmod files missing, cloning firmware ..."
			if [ -e "${GIT_BRANCH}-firmware" ]; then
				echo "         Deleting $(pwd)/${GIT_BRANCH}-firmware/ ..."
				sudo rm -rf "${GIT_BRANCH}-firmware" > /dev/null
			fi
			sudo git clone --quiet --depth 1 https://github.com/raspberrypi/firmware.git "${GIT_BRANCH}-firmware" > /dev/null
			if [ -e "${GIT_BRANCH}-firmware/modules" ]; then
				cd "${GIT_BRANCH}-firmware"
				if [ -e "modules/$(uname -r)" ]; then
					if [ -e "/lib/modules/$(uname -r)" ]; then
						echo "         Deleting /lib/modules/$(uname -r)/ ..."
						sudo rm -rf "/lib/modules/$(uname -r)" > /dev/null
					fi
					sudo mv "modules/$(uname -r)" "/lib/modules/$(uname -r)" > /dev/null
				else
					echo "         Did not find modules/$(uname -r)"
				fi
				cd ..
				sudo rm -rf "${GIT_BRANCH}-firmware" > /dev/null
			else
				echo "         Git clone failed"
			fi
		fi
		sudo modprobe configs > /dev/null
	fi
	
	if [ -e "${GIT_BRANCH}" ]; then
		echo "   Deleting $(pwd)/${GIT_BRANCH}/ ..."
		sudo rm -rf "${GIT_BRANCH}" > /dev/null
	fi
	sudo mkdir "${GIT_BRANCH}" > /dev/null
	cd "${GIT_BRANCH}"
	echo "   Cloning git branch ${GIT_BRANCH} (very large) ..."
	sudo git clone --quiet --depth 1 git://github.com/raspberrypi/linux.git --branch "${GIT_BRANCH}" > /dev/null
	if [ -e "linux/Makefile" ]; then
		cd linux
		
		echo "   Running make mrproper/oldconfig/kernelrelease (prep) ..."
		sudo make mrproper > /dev/null
		zcat /proc/config.gz | sudo tee --append .config > /dev/null
		sudo make oldconfig > /dev/null
		sudo make kernelrelease > /dev/null
		KERN_VER=$(make kernelrelease)
		if [ "${KERN_VER}" == "$(uname -r)" ]; then
			echo "   Running make modules_prepare (build) ..."
			sudo make modules_prepare > /dev/null
			BUILD_RES=$?
			if [ ${BUILD_RES} -eq 0 ]; then
				echo "      Moving to /lib/modules/$(uname -r)/build ..."
				cd ..
				sudo mkdir -p "/lib/modules/$(uname -r)" > /dev/null
				sudo mv linux "/lib/modules/$(uname -r)/build" > /dev/null
			else
				echo "      Build failed"
			fi
		else
			echo "      Git branch is ${KERN_VER}, expected $(uname -r)"
			echo "      Try running Hexxeh's rpi-update, reboot, then try again"
		fi
	else
		echo "      Git clone failed"
	fi
	
	cd /usr/src
	sudo rm -rf "${GIT_BRANCH}" > /dev/null
	
	echo ""
)


check_headers || exit 1
