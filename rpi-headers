#!/usr/bin/env bash

set -o nounset
set -o errexit

HEAD_PACKAGE=linux-headers-$(uname -r)


# Check if already installed
if [ -e "/lib/modules/$(uname -r)/build" ]; then
	echo "${HEAD_PACKAGE} already installed"
	echo ""
	exit 0
fi


# Try APT (likely to fail)
if [ ! -e "/lib/modules/$(uname -r)/build" ]; then
	echo "Checking apt-cache for ${HEAD_PACKAGE} ..."
	
	echo "   Running apt-get update ..."
	sudo apt-get update > /dev/null || true
	
	# niksula.hut.fi package shows up in "apt-cache search"
	DPKG_LIST=$(dpkg --list "${HEAD_PACKAGE}" 2>&1 | grep "no package" || true)
	if [ "${DPKG_LIST}" == "" ]; then
		echo "   Uninstalling old package ..."
		sudo dpkg --remove --force-remove-reinstreq "${HEAD_PACKAGE}" &> /dev/null
	fi
	
	APT_CACHE=$(apt-cache search "${HEAD_PACKAGE}")
	if [ "${APT_CACHE}" != "" ]; then
		echo "   Found package, installing ..."
		sudo apt-get -y install "${HEAD_PACKAGE}" > /dev/null
	else
		echo "   Did not find package"
	fi
	echo ""
fi


# Try niksula.hut.fi/~mhiienka
if [ ! -e "/lib/modules/$(uname -r)/build" ]; then
	echo "Checking http://niksula.hut.fi/~mhiienka for ${HEAD_PACKAGE} ..."
	
	WGET_PACKAGE=$(wget http://www.niksula.hut.fi/~mhiienka/Rpi/linux-headers-rpi/ -qq --tries 3 -O - | sed -n "s/.*href=\"\([^\"\/]\+\).*/\1/p" | sed 's/%2B/+/ig' | grep \.deb | grep "${HEAD_PACKAGE}" || true)
	if [ "${WGET_PACKAGE}" != "" ]; then
		cd /usr/src
		if [ -e "${WGET_PACKAGE}" ]; then
			echo "   Deleting ${WGET_PACKAGE} ..."
			sudo rm -f "${WGET_PACKAGE}" > /dev/null
		fi
		echo "   Downloading ${WGET_PACKAGE} ..."
		sudo wget -q --tries 3 "http://www.niksula.hut.fi/~mhiienka/Rpi/linux-headers-rpi/${WGET_PACKAGE}" > /dev/null
		if [ -e "${WGET_PACKAGE}" ]; then
			DPKG_LIST=$(dpkg --list "${HEAD_PACKAGE}" 2>&1 | grep "no package" || true)
			if [ "$DPKG_LIST" == "" ]; then
				echo "   Uninstalling old package ..."
				sudo dpkg --remove --force-remove-reinstreq "${HEAD_PACKAGE}" &> /dev/null
			fi
			if [ -e "${HEAD_PACKAGE}" ]; then
				echo "   Deleting $(pwd)/${HEAD_PACKAGE}/ ..."
				sudo rm -rf "${HEAD_PACKAGE}" > /dev/null
			fi
			echo "   Installing package ..."
			sudo dpkg --install "${WGET_PACKAGE}" > /dev/null || true
			sudo rm -f "${WGET_PACKAGE}" > /dev/null
			
			if [ -e "/lib/modules/$(uname -r)/modules.order" ]; then
				echo "   Installing apt-get missing dependencies ..."
				sudo apt-get -y check > /dev/null
				sudo apt-get -fy install > /dev/null
			else
				echo "      Install failed, removing ..."
				sudo dpkg --remove --force-remove-reinstreq "${HEAD_PACKAGE}" &> /dev/null
				sudo rm -rf "/lib/modules/$(uname -r)"
			fi
		else
			echo "      Download failed"
		fi
	else
		echo "   Did not find package"
	fi
	echo ""
fi


# Build from source (takes up a lot of space on disk)
if [ ! -e "/lib/modules/$(uname -r)/build" ]; then
	echo "Building ${HEAD_PACKAGE} from http://github.com/raspberrypi/linux ..."
	
	cd /usr/src
	GIT_BRANCH=rpi-$(uname -r | sed -n "s/\([0-9]\+\.[0-9]\+\).*/\1/p").y
	if [ -e "${GIT_BRANCH}" ]; then
		echo "   Deleting $(pwd)/${GIT_BRANCH}/ ..."
		sudo rm -rf "${GIT_BRANCH}" > /dev/null
	fi
	sudo mkdir "${GIT_BRANCH}" > /dev/null
	cd "${GIT_BRANCH}"
	echo "   Cloning git branch ${GIT_BRANCH} (very large) ..."
	sudo git clone --quiet --depth 1 git://github.com/raspberrypi/linux.git --branch "${GIT_BRANCH}" > /dev/null
	if [ -e "linux/Makefile" ]; then
		cd linux
		
		echo "   Running make mrproper/oldconfig/kernelrelease (prep) ..."
		sudo make mrproper > /dev/null
		sudo sh -c 'zcat /proc/config.gz > .config'
		sudo make oldconfig > /dev/null
		sudo make kernelrelease > /dev/null
		KERN_VER=$(make kernelrelease)
		if [ "${KERN_VER}" == "$(uname -r)" ]; then
			echo "   Running make modules_prepare (build) ..."
			sudo make modules_prepare > /dev/null
			BUILD_RES=$?
			if [ ${BUILD_RES} -eq 0 ]; then
				echo "      Moving to /lib/modules/$(uname -r)/build ..."
				cd ..
				sudo mkdir -p "/lib/modules/$(uname -r)" > /dev/null
				sudo mv linux "/lib/modules/$(uname -r)/build" > /dev/null
			else
				echo "      Build failed"
			fi
		else
			echo "      Git branch is ${KERN_VER}, expected $(uname -r)"
			echo "      Try running Hexxeh's rpi-update, reboot, then try again"
		fi
	else
		echo "      Git clone failed"
	fi
	
	cd /usr/src
	sudo rm -rf "${GIT_BRANCH}" > /dev/null
	
	echo ""
fi


if [ ! -e "/lib/modules/$(uname -r)/build" ]; then exit 1; fi